{"version":3,"file":"index.mjs","sources":["../src/utils/objectUtils.ts","../src/utils/functionUtils.ts","../src/utils/typeGuards.ts","../src/utils/performanceUtils.ts","../src/utils/arrayUtils.ts","../src/errors/index.ts","../src/features/index.ts","../src/constants/EventPriority.ts","../src/constants/FiberFlags.ts","../src/constants/Hook.ts","../src/constants/LaneModel.ts","../src/constants/React.ts","../src/constants/SchedulerPriority.ts","../src/constants/WorkTag.ts"],"sourcesContent":["export const objectUtils = {\n  /**\n   * 浅比较两个对象是否相等\n   */\n  shallowEqual<T extends Record<string, any>>(objA: T, objB: T): boolean {\n    if (Object.is(objA, objB)) {\n      return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null || \n        typeof objB !== 'object' || objB === null) {\n      return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n\n    for (const key of keysA) {\n      if (!Object.prototype.hasOwnProperty.call(objB, key) ||\n          !Object.is(objA[key], objB[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * 检查对象是否为空\n   */\n  isEmpty(obj: Record<string, any>): boolean {\n    return Object.keys(obj).length === 0;\n  },\n\n  /**\n   * 深度克隆对象\n   */\n  deepClone<T>(obj: T): T {\n    if (obj === null || typeof obj !== 'object') {\n      return obj;\n    }\n\n    if (obj instanceof Date) {\n      return new Date(obj.getTime()) as T;\n    }\n\n    if (obj instanceof Array) {\n      return obj.map(item => this.deepClone(item)) as T;\n    }\n\n    if (typeof obj === 'object') {\n      const cloned = {} as Record<string, any>;\n      for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          cloned[key] = this.deepClone((obj as any)[key]);\n        }\n      }\n      return cloned as T;\n    }\n\n    return obj;\n  }\n};\n","/**\n * 函数工具函数\n */\nexport const functionUtils = {\n  /**\n   * 空操作函数\n   */\n  noop(): void {\n    // Intentionally empty\n  },\n\n  /**\n   * 恒等函数\n   */\n  identity<T>(value: T): T {\n    return value;\n  },\n\n  /**\n   * 创建节流函数\n   */\n  throttle<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n    let previous = 0;\n\n    return function (this: any, ...args: Parameters<T>) {\n      const now = Date.now();\n      const remaining = wait - (now - previous);\n\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        func.apply(this, args);\n      } else if (!timeout) {\n        timeout = setTimeout(() => {\n          previous = Date.now();\n          timeout = null;\n          func.apply(this, args);\n        }, remaining);\n      }\n    };\n  },\n\n  /**\n   * 创建防抖函数\n   */\n  debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: ReturnType<typeof setTimeout> | null = null;\n\n    return function (this: any, ...args: Parameters<T>) {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(() => {\n        func.apply(this, args);\n      }, wait);\n    };\n  }\n};\n","/**\n * 类型守卫函数\n */\nexport const typeGuards = {\n  /**\n   * 检查是否为函数\n   */\n  isFunction(value: unknown): value is Function {\n    return typeof value === 'function';\n  },\n\n  /**\n   * 检查是否为对象（非null）\n   */\n  isObject(value: unknown): value is Record<string, unknown> {\n    return value !== null && typeof value === 'object';\n  },\n\n  /**\n   * 检查是否为字符串\n   */\n  isString(value: unknown): value is string {\n    return typeof value === 'string';\n  },\n\n  /**\n   * 检查是否为数字\n   */\n  isNumber(value: unknown): value is number {\n    return typeof value === 'number' && !isNaN(value);\n  },\n\n  /**\n   * 检查是否为布尔值\n   */\n  isBoolean(value: unknown): value is boolean {\n    return typeof value === 'boolean';\n  },\n\n  /**\n   * 检查是否为数组\n   */\n  isArray(value: unknown): value is unknown[] {\n    return Array.isArray(value);\n  },\n\n  /**\n   * 检查是否为null或undefined\n   */\n  isNullOrUndefined(value: unknown): value is null | undefined {\n    return value === null || value === undefined;\n  },\n\n  /**\n   * 检查是否为有效的React元素key\n   */\n  isValidElementKey(key: unknown): key is string | number {\n    return this.isString(key) || this.isNumber(key);\n  }\n};","/**\n * 性能工具函数\n */\nexport const performanceUtils = {\n  /**\n   * 高精度时间测量\n   */\n  now(): number {\n    return performance.now();\n  },\n\n  /**\n   * 测量函数执行时间\n   */\n  measure<T extends (...args: any[]) => any>(\n    func: T,\n    label?: string\n  ): (...args: Parameters<T>) => ReturnType<T> {\n    return function (this: any, ...args: Parameters<T>) {\n      const start = performanceUtils.now();\n      const result = func.apply(this, args);\n      const end = performanceUtils.now();\n      \n      if (label) {\n        console.log(`${label}: ${end - start}ms`);\n      }\n      \n      return result;\n    };\n  },\n\n  /**\n   * 创建性能标记\n   */\n  mark(name: string): void {\n    if (typeof performance !== 'undefined' && performance.mark) {\n      performance.mark(name);\n    }\n  },\n\n  /**\n   * 测量两个标记之间的时间\n   */\n  measureBetween(startMark: string, endMark: string, measureName: string): void {\n    if (typeof performance !== 'undefined' && performance.measure) {\n      performance.measure(measureName, startMark, endMark);\n    }\n  }\n};","/**\n * 数组工具函数\n */\nexport const arrayUtils = {\n  /**\n   * 移除数组中的指定元素\n   */\n  remove<T>(arr: T[], item: T): T[] {\n    const index = arr.indexOf(item);\n    if (index > -1) {\n      arr.splice(index, 1);\n    }\n    return arr;\n  },\n\n  /**\n   * 检查数组是否包含指定元素\n   */\n  includes<T>(arr: T[], item: T): boolean {\n    return arr.indexOf(item) !== -1;\n  },\n\n  /**\n   * 数组去重\n   */\n  unique<T>(arr: T[]): T[] {\n    return Array.from(new Set(arr));\n  },\n\n  /**\n   * 扁平化数组\n   */\n  flatten<T>(arr: (T | T[])[]): T[] {\n    return arr.reduce<T[]>((acc, val) => {\n      return acc.concat(Array.isArray(val) ? this.flatten(val) : val);\n    }, []);\n  }\n};","function warn(condition: boolean, message: string) {\n  if (!condition) {\n    console.warn(message)\n  }\n}\n\nfunction invariant(condition: boolean, message: string): asserts condition {\n  if (!condition) {\n    throw new Error(`Invariant Violation: ${message}`)\n  }\n}\n\nexport {\n  warn,\n  invariant,\n}","const enableSuspense = true\n\nconst enableBatching = false\n\nexport {\n  enableBatching,\n  enableSuspense,\n}","/**\n * 事件优先级\n */\nexport const EventPriority = {\n  DiscreteEventPriority: 0,\n  ContinuousEventPriority: 1,\n  DefaultEventPriority: 2,\n  IdleEventPriority: 3,\n} as const;\n\nexport type EventPriorityType = (typeof EventPriority)[keyof typeof EventPriority];\n","/**\n * Fiber副作用标志位\n * 用于标记Fiber节点在协调过程中需要执行的操作\n */\n\n// 不包含任何副作用\nexport const NoFlags = 0b0000000000000000000000000000;\n\n// 更新操作\nexport const Update = 0b0000000000000000000000000100;\n\n// 插入或移动操作  \nexport const Placement = 0b0000000000000000000000001000;\n\n// 删除操作\nexport const Deletion = 0b0000000000000000000000010000;\n\n// 子节点有删除操作\nexport const ChildDeletion = 0b0000000000000000000000100000;\n\n// 内容重置（清空文本内容）\nexport const ContentReset = 0b0000000000000000000001000000;\n\n// useLayoutEffect 相关\nexport const LayoutMask = Update;\nexport const HookLayout = 0b0000000000000000000010000000;\n\n// useEffect 相关\nexport const PassiveMask = Update;\nexport const HookPassive = 0b0000000000000000000100000000;\n\n// ref 相关\nexport const Ref = 0b0000000000000000001000000000;\n\n// Suspense 相关\nexport const ShouldCapture = 0b0000000000000001000000000000;\nexport const DidCapture = 0b0000000000000010000000000000;\n\n// Hydration 相关（服务端渲染）\nexport const Hydrating = 0b0000000000000100000000000000;\nexport const HydrateKids = 0b0000000000001000000000000000;\n\n// 错误边界相关\nexport const DidMount = 0b0000000000010000000000000000;\nexport const DidUnmount = 0b0000000000100000000000000000;\n\n// 调度优先级相关\nexport const ForceUpdate = 0b0000000001000000000000000000;\n\nexport const PerformedWork = 0b000000000000000000000001;\nexport const PlacementAndUpdate = Placement | Update;\nexport const Callback = 0b000000000000000000100000;\nexport const Snapshot = 0b000000000000000100000000;\nexport const Passive = 0b000000000000001000000000;\nexport const PassiveStatic = 0b000000000000010000000000;\nexport const Visibility = 0b000000000001000000000000;\n\n// 组合标志位\nexport const MutationMask = \n  Placement | \n  Update | \n  ChildDeletion | \n  ContentReset | \n  Ref | \n  Hydrating;\n\nexport const LayoutMaskAll = \n  Update | \n  Ref | \n  HookLayout;\n\nexport const PassiveMaskAll = \n  Update | \n  HookPassive;\n\n// 静态标志位（不会在运行时更改）\nexport const StaticMask = LayoutMask | PassiveMask | Ref;\n\n// 所有标志位的联合类型\nexport type FiberFlags = number;\n\n","/**\n * Hook 类型常量\n */\nexport const HookTypesEnum = {\n  useState: 0,\n  useReducer: 1,\n  useEffect: 2,\n  useLayoutEffect: 3,\n  useMemo: 4,\n  useCallback: 5,\n  useRef: 6,\n  useImperativeHandle: 7,\n  useContext: 8,\n  useTransition: 9,\n  useDeferredValue: 10,\n  useId: 11,\n} as const;\n\nexport type HookType = (typeof HookTypesEnum)[keyof typeof HookTypesEnum];\n","/**\n * Lane 模型 - React 18+ 的优先级模型\n * 使用位掩码来表示不同的优先级通道\n */\nexport const TotalLanes = 31;\n\n// 同步相关的 Lane\nexport const NoLanes = 0b0000000000000000000000000000000;\nexport const NoLane = 0b0000000000000000000000000000000;\nexport const SyncLane = 0b0000000000000000000000000000001;\n\n// 输入相关的 Lane\nexport const InputContinuousHydrationLane = 0b0000000000000000000000000000010;\nexport const InputContinuousLane = 0b0000000000000000000000000000100;\n\n// 默认相关的 Lane  \nexport const DefaultHydrationLane = 0b0000000000000000000000000001000;\nexport const DefaultLane = 0b0000000000000000000000000010000;\n\n// Transition 相关的 Lane\nexport const TransitionHydrationLane = 0b0000000000000000000000000100000;\nexport const TransitionLanes = 0b0000000001111111111111111000000;\nexport const TransitionLane1 = 0b0000000000000000000000001000000;\nexport const TransitionLane2 = 0b0000000000000000000000010000000;\n// TODO 更多 TransitionLane\n\n// Retry 相关的 Lane\nexport const RetryLanes = 0b0000111110000000000000000000000;\nexport const RetryLane1 = 0b0000000010000000000000000000000;\nexport const RetryLane2 = 0b0000000100000000000000000000000;\nexport const RetryLane3 = 0b0000001000000000000000000000000;\nexport const RetryLane4 = 0b0000010000000000000000000000000;\n\n// 其他优先级\nexport const SomeRetryLane = RetryLane1;\nexport const SelectiveHydrationLane = 0b0000100000000000000000000000000;\nexport const NonIdleLanes = 0b0000111111111111111111111111111;\nexport const IdleHydrationLane = 0b0001000000000000000000000000000;\nexport const IdleLane = 0b0010000000000000000000000000000;\nexport const OffscreenLane = 0b0100000000000000000000000000000;\n\nexport type Lane = number;\nexport type Lanes = number;\n\n/**\n * Lane 优先级映射\n */\nexport function getHighestPriorityLane(lanes: Lanes): Lane {\n  return lanes & -lanes;\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: any): Lanes {\n  return SyncLane;\n}\n\nexport function includesSomeLane(a: Lanes, b: Lanes): boolean {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes): boolean {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes, b: Lanes): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes): Lanes {\n  return set & ~subset;\n}","/**\n * React 元素类型常量\n */\nexport const REACT_ELEMENT_TYPE = Symbol.for('react.element');\nexport const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nexport const REACT_PORTAL_TYPE = Symbol.for('react.portal');\nexport const REACT_CONTEXT_TYPE = Symbol.for('react.context');\nexport const REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nexport const REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nexport const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nexport const REACT_MEMO_TYPE = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE = Symbol.for('react.lazy');\n","/**\n * 调度优先级\n */\n\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\nexport const NoPriority = 0;\n\n\nexport type PriorityLevel = \n  | typeof ImmediatePriority\n  | typeof UserBlockingPriority  \n  | typeof NormalPriority\n  | typeof LowPriority\n  | typeof IdlePriority\n  | typeof NoPriority;","\n/**\n * 工作标签 (WorkTag)\n */\nexport const WorkTag = {\n  FunctionComponent: 0,\n  ClassComponent: 1,\n  IndeterminateComponent: 2,\n  HostRoot: 3,\n  HostComponent: 4,\n  HostText: 5,\n  Fragment: 7,\n  Mode: 8,\n  ContextConsumer: 9,\n  ContextProvider: 10,\n  ForwardRef: 11,\n  Profiler: 12,\n  SuspenseComponent: 13,\n  MemoComponent: 14,\n  SimpleMemoComponent: 15,\n  LazyComponent: 16,\n  IncompleteClassComponent: 17,\n  DehydratedFragment: 18,\n  SuspenseListComponent: 19,\n  ScopeComponent: 21,\n  OffscreenComponent: 22,\n  LegacyHiddenComponent: 23,\n  CacheComponent: 24,\n} as const;\n\nexport type WorkTagType = (typeof WorkTag)[keyof typeof WorkTag];\n"],"names":[],"mappings":"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"}